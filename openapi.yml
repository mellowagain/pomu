openapi: 3.0.3

info:
  title: pomu.app API
  version: 0.0.1
  description: Public API for pomu.app
  contact:
    name: General inqueries regarding API
    email: mari@pomu.app
    url: https://pomu.app
  license:
    name: BSD 3-Clause
    url: https://github.com/mellowagain/pomu/blob/main/LICENSE.txt

servers:
  - url: https://pomu.app/api
    description: Production
  - url: https://dev.pomu.app/api
    description: Development instance

components:
  schemas:
    video:
      type: object
      required:
        - id
        - submitters
        - scheduledStart
        - finished
        - title
        - channelName
        - channelId
        - thumbnail
      properties:
        id:
          type: string
          description: Video ID
        submitters:
          type: array
          description: "List of user IDs which have submitted this video to the queue (Format: Provider/UserID)"
          items:
            type: string
        scheduledStart:
          type: string
          format: date-time
          description: Scheduled start of livestream
        finished:
          type: boolean
          description: Whenever the livestream has finished already
        title:
          type: string
          description: Livestream title
        channelName:
          type: string
          description: Name of channel which is streaming this livestream
        channelId:
          type: string
          description: Channel ID of channel which is streaming this livestream
        thumbnail:
          type: string
          description: URL to maximum quality thumbnail available for livestream
        downloadUrl:
          type: string
          description: URL where archive is available for download
        fileSizeBytes:
          type: integer
          format: int64
          description: Archive file size in bytes
        length:
          type: integer
          format: int32
          description: Length of livestream in seconds
    user:
      type: object
      required:
        - id
        - name
        - avatar
        - provider
      properties:
        id:
          type: string
          description: OAuth provider User ID
        name:
          type: string
          description: Username (or First Name)
        avatar:
          type: string
          format: url
          description: URL to avatar
        provider:
          type: string
          enum:
            - google
            - discord

  parameters:
    videoId:
      name: videoId
      in: path
      required: true
      schema:
        type: string
        description: Video ID of the video which you want to download `type` from

paths:
  /:
    get:
      operationId: apiOverview
      description: Returns general API information
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - app
                  - documentation
                  - repository
                  - commit
                properties:
                  app:
                    type: string
                    description: Service which is running
                  documentation:
                    type: string
                    description: URL to API documentation
                  repository:
                    type: string
                    description: URL to code repository
                  commit:
                    type: string
                    description: Git SHA-1 of commit which is deployed
  /validate:
    get:
      operationId: ValidateLivestream
      description: Validates if the livestream is allowed to be submitted
      parameters:
        - name: url
          in: query
          description: YouTube url of livestream which should be validated against submission guidelines
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - valid
                  - channelId
                properties:
                  valid:
                    type: boolean
                    description: Whenever this stream follows configured submission guidelines and can be submitted
                  channelId:
                    type: string
                    description: Channel ID of the submitted video
  /qualities:
    get:
      operationId: PeekForQualities
      description: Get list of available qualities for stream
      parameters:
        - name: url
          in: query
          description: YouTube url of livestream for which qualities should be peeked
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - code
                    - resolution
                    - best
                  properties:
                    code:
                      type: integer
                      format: int32
                      description: Numeric ID of the quality
                    resolution:
                      type: string
                      description: Human-readable resolution of the quality
                    best:
                      type: boolean
                      description: Whenever this is the best available quality (both audio and video)
  /submit:
    post:
      operationId: SubmitVideo
      description: Submits a livestream to the archiving queue
      requestBody:
        required: true
        description: Livestream submission payload
        content:
          application/json:
            schema:
              type: object
              required:
                - videoUrl
                - quality
              properties:
                videoUrl:
                  type: string
                  description: YouTube url of live stream which should be added to queue
                quality:
                  type: integer
                  format: int32
                  description: Numeric ID of the quality in which the live stream should be archived
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/video"
        "401":
          description: Not logged in
  /queue:
    get:
      operationId: GetQueue
      description: Gets list of currently queued livestreams (live or upcoming)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/video"
  /history:
    get:
      operationId: GetHistory
      description: Gets list of archived livestreams
      parameters:
        - name: page
          in: query
          description: Page to display
          schema:
            type: integer
            format: int32
            additionalProperties:
              minimum: 0
              default: 0
        - name: limit
          in: query
          description: Amount of livestreams to display per page
          schema:
            type: integer
            format: int32
            additionalProperties:
              maximum: 100
              default: 25
        - name: sort
          in: query
          description: Sort direction of results
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: unfinished
          in: query
          description: Whenever unfinished livestreams (live or upcoming) should be displayed
          schema:
            type: boolean
            additionalProperties:
              default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/video"
          headers:
            X-Pomu-Pagination-Total:
              description: Total amounts of rows that match the filter
              required: true
              schema:
                type: integer
            X-Pomu-Pagination-Has-More:
              description: Whenever there are more pages available
              required: true
              schema:
                type: boolean
  /search:
    get:
      operationId: SearchMetadata
      description: |
        Get Meilisearch metadata to search for videos.
        If search is enabled, the returned metadata can be used to search for archived streams in the index `pomu`.
        The returned `apiKey`, if provided, is guaranteed to be view and search only and can not modify the index.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - enabled
                properties:
                  enabled:
                    type: boolean
                    description: Whenever search is enabled on this instance
                  url:
                    type: string
                    description: Meilisearch API base url, if search is enabled
                  apiKey:
                    type: string
                    description: Meilisearch API key, if search is enabled
  /user:
    get:
      operationId: identitySelf
      description: Get full identity for the currently logged in user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "401":
          description: Not logged in
  /user/{provider}/{id}:
    parameters:
      - name: provider
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: identity
      description: Get identity of a specific user
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
  /video/{videoId}/downloads:
    parameters:
      - $ref: "#/components/parameters/videoId"
    get:
      operationId: DownloadCount
      description: Get the amount of downloads for the requested video
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - downloads
                properties:
                  downloads:
                    type: integer
                    description: The total amount of times this video has been downloaded
  /download/{videoId}/{type}:
    parameters:
      - $ref: "#/components/parameters/videoId"
      - name: type
        in: path
        required: true
        schema:
          type: string
          description: What you want to download
          enum:
            - video
            - ffmpeg
            - thumbnail
      - name: User-Agent
        in: header
        required: true
        schema:
          type: string
          description: |
            A identify-able user agent string is **required** to use the pomu download endpoint.
            Including a identify-able user agent allows us to contact you in case of abuse
            or usage outside of our fair-use policy.

            Failing to include such a user agent **will** result in request blocking (401 Bad Request)
            and may also lead to an automated IP(-range) ban, if the request block is being circumvented.
        example: "pomu (https://github.com/mellowagain/pomu)"
        allowReserved: true
    get:
      operationId: Download
      description: Downloads the request `type` of video `videoId`
      responses:
        "307":
          description: | 
            OK - Follow redirect (response header `Location`) to download the requested file.

            > warn
            > The returned `Content-Type` and `Content-Disposition` may differ depending on
            > what type you requested and when the stream was archived:

            - **Type `video`** archived before 2023-01-26:
              - `Content-Type: binary/octet-stream`
              - No `Content-Disposition` header
            - **Type `video`** archived between 2023-01-27 and 2023-02-04:
              - `Content-Type: video/mp4`
              - `Content-Disposition: inline`
            - **Type `video`** archived after 2023-02-05:
              - `Content-Type: video/mp4`
              - `Content-Disposition: attachment`
            - **Type `thumbnail`** archived before 2023-01-26:
              - `Content-Type: binary/octet-stream`
              - No `Content-Disposition` header
            - **Type `thumbnail`** archived after 2023-01-27:
              - `Content-Type: image/jpeg`
              - `Content-Disposition: inline`
            - **Type `ffmpeg`** archived before 2023-01-26:
              - `Content-Type: binary/octet-stream`
              - No `Content-Disposition` header
            - **Type `ffmpeg`** archived after 2023-01-27:
              - `Content-Type: text/plain`
              - `Content-Disposition: inline`
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "401":
          description: | 
            # Bad Request
            One of these two things occurred:
            - Video or ffmpeg log download has been requested but the video has not yet finished archiving.
            - A bad user agent has been sent with the request. Please see the `User-Agent` header definition in this file.
        "404":
          description: Not Found
  /logz:
    get:
      operationId: Log
      description: Get ffmpeg log for a livestream which is currently being archived
      parameters:
        - name: url
          in: query
          description: YouTube url of livestream for which ffmpeg logs should be returned
          schema:
            type: string
        - name: id
          in: query
          description: Video ID of livestream for which ffmpeg logs should be returned
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /stats:
    get:
      operationId: GetStats
      description: Get general stats for this pomu.app instance
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - videoAmount
                  - totalFileSize
                  - totalLength
                  - uniqueChannels
                  - s3BillPerMonth
                properties:
                  videoAmount:
                    type: integer
                    description: Amount of videos which are archived or queued to be archived
                  totalFileSize:
                    type: integer
                    description: Total file size of all archives in bytes
                  totalLength:
                    type: integer
                    description: Total amount of seconds of all archives
                  s3BillPerMonth:
                    type: number
                    format: double
                    description: S3 bill per month in USD
                  usdPerGbPerMonth:
                    type: number
                    format: double
                    description: Cost of a single gigabyte of data per month for S3
